# YAML file
name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

# needed to allow julia-actions/cache to delete old caches that it has created
permissions:
  actions: write
  contents: read

jobs:
  test:  # testing
    name: Julia ${{ matrix.julia-version }} - ${{ matrix.os }} - ${{ matrix.julia-arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        julia-version: ['1.11', '1']
        os: [ubuntu-latest, macOS-latest, windows-latest]
        julia-arch: [x64]
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v2
        with:
          version: ${{ matrix.julia-version }}
          arch: ${{ matrix.julia-arch }}
      - uses: julia-actions/cache@v2
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-runtest@v1
      - uses: julia-actions/julia-processcoverage@v1
      - name: Install lcov
        run: sudo apt-get install lcov
      - name: Run coverage
        run: |
          julia -e 'using Pkg; Pkg.test("MirrorVI", coverage=true)'
      - name: Generate LCOV file
        run: |
          julia -e 'using Coverage; coverage = process_folder(); LCOV.writefile("coverage.lcov", coverage)'
      - name: Publish HTML coverage report
        run: |
          genhtml coverage.lcov --output-directory coverage_report
      - name: Deploy to GitHub pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./coverage_report
      - name: Clean old files
        run: |
          julia -e 'using Coverage; Coverage.clean_folder("./")'
      # - uses: codecov/codecov-action@v5
      #   with:
      #     file: lcov.info
  docs:  # Documentation
    name: Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v2
        with:
          version: '1'
      - run: |
          julia --project=docs -e '
            using Pkg
            Pkg.develop(PackageSpec(path=pwd()))
            Pkg.instantiate()'
      - run: |
          julia --project=docs -e '
            using Documenter: doctest
            using MirrorVI
            doctest(MirrorVI)'
      - run: julia --project=docs docs/make.jl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v5
